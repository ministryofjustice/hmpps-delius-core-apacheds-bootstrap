---
# tasks file for hmpps-delius-core-apacheds-bootstrap

- name: Start service apacheds, on boot
  service:
    name: "{{ apacheds_version }}"
    enabled: yes

- name: Start service apacheds, if not started
  become: yes
  service:
    name: "{{ apacheds_version }}"
    state: restarted

- name: Wait for apacheds to start
  wait_for:
    port: 10389

- name: Create workspace if it doesn't exist
  become: yes
  become_user: apacheds
  file:
    path: '{{ workspace }}'
    state: directory
    mode: 0755

- name: Copy LDIFs
  become: yes
  become_user: apacheds
  template:
    src: '{{ item.file }}.j2'
    dest: '{{ workspace }}/{{ item.file }}'
    mode: 0644
  with_items:
    - { file: partition.ldif }
    - { file: context.ldif }
    - { file: schema.ldif }
    - { file: test-user.ldif }

- name: Download role catalogues
  when: s3_dependencies_bucket is defined
  become: yes
  become_user: apacheds
  aws_s3:
    bucket: '{{ s3_dependencies_bucket }}'
    object: '/dependencies/delius-core/NDelius-{{ ndelius_version }}/scripts/User Data Store/{{ item.file }}'
    dest: '{{ workspace }}/{{ item.file }}'
    mode: get
  with_items:
    - { file: nd_role_catalogue.ldif }
    - { file: nd_role_groups.ldif }

- name: Copy local role catalogues
  when: s3_dependencies_bucket is not defined
  copy:
    src: 's3/dependencies/delius-core/NDelius-{{ ndelius_version }}/scripts/User Data Store/{{ item.file }}'
    dest: '{{ workspace }}/{{ item.file }}'
    owner: apacheds
    group: apacheds
    mode: 0644
  with_items:
    - { file: nd_role_catalogue.ldif }
    - { file: nd_role_groups.ldif }

- name: Replace context in LDIFs
  become: yes
  become_user: apacheds
  replace:
    path: '{{ workspace }}/{{ item.file }}'
    regexp: 'dc=pcms,dc=internal'
    replace: '{{ base_root }}'
  with_items:
    - { file: nd_role_catalogue.ldif }
    - { file: nd_role_groups.ldif }

- name: Create partition
  become: yes
  become_user: apacheds
  shell: 'ldapadd {{ ldap_connection }} -f {{ workspace }}/partition.ldif'
  no_log: '{{ hide_passwords_in_log }}'

- name: Restart ApacheDS to pick up the partition
  become: yes
  service:
    name: "{{ apacheds_version }}"
    state: restarted

- name: Wait for apacheds to start
  wait_for:
    port: 10389

- name: Import LDIFs
  become: yes
  become_user: apacheds
  shell: 'ldapadd {{ ldap_connection }} -f {{ workspace }}/{{ item.file }}'
  no_log: '{{ hide_passwords_in_log }}'
  with_items:
    - { file: context.ldif }
    - { file: schema.ldif }
    - { file: nd_role_catalogue.ldif }
    - { file: nd_role_groups.ldif }

- name: Create test user
  when: create_test_user
  become: yes
  become_user: apacheds
  shell: 'ldapadd {{ ldap_connection }} -f {{ workspace }}/test-user.ldif'
  no_log: '{{ hide_passwords_in_log }}'